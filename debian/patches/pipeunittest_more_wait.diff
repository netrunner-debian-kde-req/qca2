Author: Pino Toscano <pino@debian.org>
Description: pipeunittest: raise the qWait() times to 100ms
 In some cases 1ms can be too few to be able to actually read the data from
 pipes and propagating the events with signals and timeouts.
 Raise the waits to 100ms to give enough time without slowing the test too
 much.
Last-Update: 2012-06-03
Forwarded: no

--- a/unittest/pipeunittest/pipeunittest.cpp
+++ b/unittest/pipeunittest/pipeunittest.cpp
@@ -106,17 +106,17 @@ void PipeUnitTest::readWrite()
     pipe1.readEnd().enable();
 
     pipe1.writeEnd().write( testData1 );
-    QTest::qWait(1); // process events
-    QTest::qWait(1); // process events
+    QTest::qWait(100); // process events
+    QTest::qWait(100); // process events
     QByteArray out1 = pipe1.readEnd().read(); // read all...
     QCOMPARE( testData1, out1 );
 
     pipe1.writeEnd().write( testData1 ); // put it back in
-    QTest::qWait(1); // process events
+    QTest::qWait(100); // process events
     QCOMPARE( pipe1.readEnd().bytesAvailable(), testData1.size() );
 
     pipe1.writeEnd().write( testData2 ); // add some more data
-    QTest::qWait(1); // process events
+    QTest::qWait(100); // process events
     QCOMPARE( pipe1.readEnd().bytesAvailable(), testData1.size() + testData2.size() );
     QByteArray thisRead = pipe1.readEnd().read(1);
     QCOMPARE( thisRead, QByteArray("D") );
@@ -141,17 +141,17 @@ void PipeUnitTest::readWriteSecure()
     pipe1.readEnd().enable();
 
     pipe1.writeEnd().writeSecure( testData1 );
-    QTest::qWait(1); // process events
-    QTest::qWait(1); // process events
+    QTest::qWait(100); // process events
+    QTest::qWait(100); // process events
     QCA::SecureArray out1 = pipe1.readEnd().readSecure(); // read all...
     QCOMPARE( testData1, out1 );
 
     pipe1.writeEnd().writeSecure( testData1 ); // put it back in
-    QTest::qWait(1); // process events
+    QTest::qWait(100); // process events
     QCOMPARE( pipe1.readEnd().bytesAvailable(), testData1.size() );
 
     pipe1.writeEnd().writeSecure( testData2 ); // add some more data
-    QTest::qWait(1); // process events
+    QTest::qWait(100); // process events
     QCOMPARE( pipe1.readEnd().bytesAvailable(), testData1.size() + testData2.size() );
     QCA::SecureArray thisRead = pipe1.readEnd().readSecure(1);
     QCOMPARE( thisRead, QCA::SecureArray("D") );
@@ -187,8 +187,8 @@ void PipeUnitTest::signalTests()
 
     QByteArray data("Far better, it is, to dare mighty things");
     pipe->writeEnd().write( data );
-    QTest::qWait(1);
-    QTest::qWait(1);
+    QTest::qWait(100);
+    QTest::qWait(100);
     QCOMPARE( readyReadSpy.count(), 1 );
     QCOMPARE( bytesWrittenSpy.count(), 1 );    
     // this pulls out the first argument to the first signal as an integer
@@ -199,11 +199,11 @@ void PipeUnitTest::signalTests()
     QCOMPARE( closedReadSpy.count(), 0 );
  
     pipe->readEnd().close();
-    QTest::qWait(1);
+    QTest::qWait(100);
     QCOMPARE( closedWriteSpy.count(), 0 );
     QCOMPARE( closedReadSpy.count(), 1 );
     pipe->writeEnd().close();
-    QTest::qWait(1);
+    QTest::qWait(100);
     QCOMPARE( closedWriteSpy.count(), 1 );
     QCOMPARE( closedReadSpy.count(), 1 );
 }
@@ -234,8 +234,8 @@ void PipeUnitTest::signalTestsSecure()
 
     QCA::SecureArray data("Far better, it is, to dare mighty things");
     pipe->writeEnd().writeSecure( data );
-    QTest::qWait(1);
-    QTest::qWait(1);
+    QTest::qWait(100);
+    QTest::qWait(100);
     QCOMPARE( readyReadSpy.count(), 1 );
     QCOMPARE( bytesWrittenSpy.count(), 1 );    
     // this pulls out the first argument to the first signal as an integer
@@ -246,11 +246,11 @@ void PipeUnitTest::signalTestsSecure()
     QCOMPARE( closedReadSpy.count(), 0 );
  
     pipe->readEnd().close();
-    QTest::qWait(1);
+    QTest::qWait(100);
     QCOMPARE( closedWriteSpy.count(), 0 );
     QCOMPARE( closedReadSpy.count(), 1 );
     pipe->writeEnd().close();
-    QTest::qWait(1);
+    QTest::qWait(100);
     QCOMPARE( closedWriteSpy.count(), 1 );
     QCOMPARE( closedReadSpy.count(), 1 );
 }
